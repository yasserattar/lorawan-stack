// Code generated by protoc-gen-go-json. DO NOT EDIT.
// versions:
// - protoc-gen-go-json vmaster
// - protoc             v3.9.1
// source: lorawan-stack/api/packetbrokeragent.proto

package ttnpb

import (
	gogo "github.com/TheThingsIndustries/protoc-gen-go-json/gogo"
	jsonplugin "github.com/TheThingsIndustries/protoc-gen-go-json/jsonplugin"
	types "github.com/gogo/protobuf/types"
)

// MarshalProtoJSON marshals the PacketBrokerGateway message to JSON.
func (x *PacketBrokerGateway) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Ids != nil {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("ids")
		// NOTE: PacketBrokerGateway_GatewayIdentifiers does not seem to implement MarshalProtoJSON.
		gogo.MarshalMessage(s, x.Ids)
	}
	if len(x.ContactInfo) > 0 {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("contact_info")
		s.WriteArrayStart()
		var wroteElement bool
		for _, element := range x.ContactInfo {
			s.WriteMoreIf(&wroteElement)
			element.MarshalProtoJSON(s.WithField("contact_info"))
		}
		s.WriteArrayEnd()
	}
	if len(x.Antennas) > 0 {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("antennas")
		s.WriteArrayStart()
		var wroteElement bool
		for _, element := range x.Antennas {
			s.WriteMoreIf(&wroteElement)
			element.MarshalProtoJSON(s.WithField("antennas"))
		}
		s.WriteArrayEnd()
	}
	if x.StatusPublic {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("status_public")
		s.WriteBool(x.StatusPublic)
	}
	if x.LocationPublic {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("location_public")
		s.WriteBool(x.LocationPublic)
	}
	if len(x.FrequencyPlanIds) > 0 {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("frequency_plan_ids")
		s.WriteStringArray(x.FrequencyPlanIds)
	}
	if x.UpdateLocationFromStatus {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("update_location_from_status")
		s.WriteBool(x.UpdateLocationFromStatus)
	}
	if x.Online {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("online")
		s.WriteBool(x.Online)
	}
	if x.RxRate != nil {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("rx_rate")
		s.WriteFloat32(x.RxRate.Value)
	}
	if x.TxRate != nil {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("tx_rate")
		s.WriteFloat32(x.TxRate.Value)
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the PacketBrokerGateway message from JSON.
func (x *PacketBrokerGateway) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "ids":
			// NOTE: PacketBrokerGateway_GatewayIdentifiers does not seem to implement UnmarshalProtoJSON.
			var v PacketBrokerGateway_GatewayIdentifiers
			gogo.UnmarshalMessage(s, &v)
			x.Ids = &v
		case "contact_info", "contactInfo":
			s.ReadArray(func() {
				if !s.ReadNil() {
					v := &ContactInfo{}
					v.UnmarshalProtoJSON(s.WithField("contact_info"))
					x.ContactInfo = append(x.ContactInfo, v)
				} else {
					x.ContactInfo = append(x.ContactInfo, nil)
				}
			})
		case "antennas":
			s.ReadArray(func() {
				if !s.ReadNil() {
					v := &GatewayAntenna{}
					v.UnmarshalProtoJSON(s.WithField("antennas"))
					x.Antennas = append(x.Antennas, v)
				} else {
					x.Antennas = append(x.Antennas, nil)
				}
			})
		case "status_public", "statusPublic":
			x.StatusPublic = s.ReadBool()
		case "location_public", "locationPublic":
			x.LocationPublic = s.ReadBool()
		case "frequency_plan_ids", "frequencyPlanIds":
			x.FrequencyPlanIds = s.ReadStringArray()
		case "update_location_from_status", "updateLocationFromStatus":
			x.UpdateLocationFromStatus = s.ReadBool()
		case "online":
			x.Online = s.ReadBool()
		case "rx_rate", "rxRate":
			if !s.ReadNil() {
				v := s.ReadFloat32()
				if s.Err() != nil {
					return
				}
				x.RxRate = &types.FloatValue{Value: v}
			}
		case "tx_rate", "txRate":
			if !s.ReadNil() {
				v := s.ReadFloat32()
				if s.Err() != nil {
					return
				}
				x.TxRate = &types.FloatValue{Value: v}
			}
		}
	})
}

// MarshalProtoJSON marshals the UpdatePacketBrokerGatewayRequest message to JSON.
func (x *UpdatePacketBrokerGatewayRequest) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Gateway != nil {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("gateway")
		x.Gateway.MarshalProtoJSON(s.WithField("gateway"))
	}
	if x.FieldMask != nil {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("field_mask")
		gogo.MarshalFieldMask(s, x.FieldMask)
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the UpdatePacketBrokerGatewayRequest message from JSON.
func (x *UpdatePacketBrokerGatewayRequest) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "gateway":
			if !s.ReadNil() {
				x.Gateway = &PacketBrokerGateway{}
				x.Gateway.UnmarshalProtoJSON(s.WithField("gateway"))
			}
		case "field_mask", "fieldMask":
			v := gogo.UnmarshalFieldMask(s)
			if s.Err() != nil {
				return
			}
			x.FieldMask = v
		}
	})
}

// MarshalProtoJSON marshals the PacketBrokerNetwork message to JSON.
func (x *PacketBrokerNetwork) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Id != nil {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("id")
		// NOTE: PacketBrokerNetworkIdentifier does not seem to implement MarshalProtoJSON.
		gogo.MarshalMessage(s, x.Id)
	}
	if x.Name != "" {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("name")
		s.WriteString(x.Name)
	}
	if len(x.DevAddrBlocks) > 0 {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("dev_addr_blocks")
		s.WriteArrayStart()
		var wroteElement bool
		for _, element := range x.DevAddrBlocks {
			s.WriteMoreIf(&wroteElement)
			// NOTE: PacketBrokerDevAddrBlock does not seem to implement MarshalProtoJSON.
			gogo.MarshalMessage(s, element)
		}
		s.WriteArrayEnd()
	}
	if len(x.ContactInfo) > 0 {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("contact_info")
		s.WriteArrayStart()
		var wroteElement bool
		for _, element := range x.ContactInfo {
			s.WriteMoreIf(&wroteElement)
			element.MarshalProtoJSON(s.WithField("contact_info"))
		}
		s.WriteArrayEnd()
	}
	if x.Listed {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("listed")
		s.WriteBool(x.Listed)
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the PacketBrokerNetwork message from JSON.
func (x *PacketBrokerNetwork) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "id":
			// NOTE: PacketBrokerNetworkIdentifier does not seem to implement UnmarshalProtoJSON.
			var v PacketBrokerNetworkIdentifier
			gogo.UnmarshalMessage(s, &v)
			x.Id = &v
		case "name":
			x.Name = s.ReadString()
		case "dev_addr_blocks", "devAddrBlocks":
			s.ReadArray(func() {
				// NOTE: PacketBrokerDevAddrBlock does not seem to implement UnmarshalProtoJSON.
				var v PacketBrokerDevAddrBlock
				gogo.UnmarshalMessage(s, &v)
				x.DevAddrBlocks = append(x.DevAddrBlocks, &v)
			})
		case "contact_info", "contactInfo":
			s.ReadArray(func() {
				if !s.ReadNil() {
					v := &ContactInfo{}
					v.UnmarshalProtoJSON(s.WithField("contact_info"))
					x.ContactInfo = append(x.ContactInfo, v)
				} else {
					x.ContactInfo = append(x.ContactInfo, nil)
				}
			})
		case "listed":
			x.Listed = s.ReadBool()
		}
	})
}

// MarshalProtoJSON marshals the PacketBrokerNetworks message to JSON.
func (x *PacketBrokerNetworks) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if len(x.Networks) > 0 {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("networks")
		s.WriteArrayStart()
		var wroteElement bool
		for _, element := range x.Networks {
			s.WriteMoreIf(&wroteElement)
			element.MarshalProtoJSON(s.WithField("networks"))
		}
		s.WriteArrayEnd()
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the PacketBrokerNetworks message from JSON.
func (x *PacketBrokerNetworks) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "networks":
			s.ReadArray(func() {
				if !s.ReadNil() {
					v := &PacketBrokerNetwork{}
					v.UnmarshalProtoJSON(s.WithField("networks"))
					x.Networks = append(x.Networks, v)
				} else {
					x.Networks = append(x.Networks, nil)
				}
			})
		}
	})
}

// MarshalProtoJSON marshals the PacketBrokerInfo message to JSON.
func (x *PacketBrokerInfo) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Registration != nil {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("registration")
		x.Registration.MarshalProtoJSON(s.WithField("registration"))
	}
	if x.ForwarderEnabled {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("forwarder_enabled")
		s.WriteBool(x.ForwarderEnabled)
	}
	if x.HomeNetworkEnabled {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("home_network_enabled")
		s.WriteBool(x.HomeNetworkEnabled)
	}
	if x.RegisterEnabled {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("register_enabled")
		s.WriteBool(x.RegisterEnabled)
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the PacketBrokerInfo message from JSON.
func (x *PacketBrokerInfo) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "registration":
			if !s.ReadNil() {
				x.Registration = &PacketBrokerNetwork{}
				x.Registration.UnmarshalProtoJSON(s.WithField("registration"))
			}
		case "forwarder_enabled", "forwarderEnabled":
			x.ForwarderEnabled = s.ReadBool()
		case "home_network_enabled", "homeNetworkEnabled":
			x.HomeNetworkEnabled = s.ReadBool()
		case "register_enabled", "registerEnabled":
			x.RegisterEnabled = s.ReadBool()
		}
	})
}
