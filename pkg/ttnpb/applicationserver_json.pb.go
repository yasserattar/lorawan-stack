// Code generated by protoc-gen-go-json. DO NOT EDIT.
// versions:
// - protoc-gen-go-json vmaster
// - protoc             v3.9.1
// source: lorawan-stack/api/applicationserver.proto

package ttnpb

import (
	gogo "github.com/TheThingsIndustries/protoc-gen-go-json/gogo"
	jsonplugin "github.com/TheThingsIndustries/protoc-gen-go-json/jsonplugin"
	types "github.com/gogo/protobuf/types"
)

// MarshalProtoJSON marshals the ApplicationLink message to JSON.
func (x *ApplicationLink) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.DefaultFormatters != nil {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("default_formatters")
		x.DefaultFormatters.MarshalProtoJSON(s.WithField("default_formatters"))
	}
	if x.Tls {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("tls")
		s.WriteBool(x.Tls)
	}
	if x.SkipPayloadCrypto != nil {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("skip_payload_crypto")
		s.WriteBool(x.SkipPayloadCrypto.Value)
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the ApplicationLink message from JSON.
func (x *ApplicationLink) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "default_formatters", "defaultFormatters":
			if !s.ReadNil() {
				x.DefaultFormatters = &MessagePayloadFormatters{}
				x.DefaultFormatters.UnmarshalProtoJSON(s.WithField("default_formatters"))
			}
		case "tls":
			x.Tls = s.ReadBool()
		case "skip_payload_crypto", "skipPayloadCrypto":
			if !s.ReadNil() {
				v := s.ReadBool()
				if s.Err() != nil {
					return
				}
				x.SkipPayloadCrypto = &types.BoolValue{Value: v}
			}
		}
	})
}

// MarshalProtoJSON marshals the SetApplicationLinkRequest message to JSON.
func (x *SetApplicationLinkRequest) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if true { // (gogoproto.nullable) = false
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("application_ids")
		// NOTE: ApplicationIdentifiers does not seem to implement MarshalProtoJSON.
		gogo.MarshalMessage(s, &x.ApplicationIdentifiers)
	}
	if true { // (gogoproto.nullable) = false
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("link")
		x.ApplicationLink.MarshalProtoJSON(s.WithField("link"))
	}
	if x.FieldMask != nil {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("field_mask")
		gogo.MarshalFieldMask(s, x.FieldMask)
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the SetApplicationLinkRequest message from JSON.
func (x *SetApplicationLinkRequest) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "application_ids", "applicationIds":
			// NOTE: ApplicationIdentifiers does not seem to implement UnmarshalProtoJSON.
			var v ApplicationIdentifiers
			gogo.UnmarshalMessage(s, &v)
			x.ApplicationIdentifiers = v
		case "link":
			if !s.ReadNil() {
				x.ApplicationLink.UnmarshalProtoJSON(s.WithField("link"))
			}
		case "field_mask", "fieldMask":
			v := gogo.UnmarshalFieldMask(s)
			if s.Err() != nil {
				return
			}
			x.FieldMask = v
		}
	})
}

// MarshalProtoJSON marshals the AsConfiguration_PubSub_Providers_Status to JSON.
func (x AsConfiguration_PubSub_Providers_Status) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	s.WriteEnumString(int32(x), AsConfiguration_PubSub_Providers_Status_name)
}

// UnmarshalProtoJSON unmarshals the AsConfiguration_PubSub_Providers_Status from JSON.
func (x *AsConfiguration_PubSub_Providers_Status) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	v := s.ReadEnum(AsConfiguration_PubSub_Providers_Status_value)
	if err := s.Err(); err != nil {
		s.SetErrorf("could not read Status enum: %v", err)
		return
	}
	*x = AsConfiguration_PubSub_Providers_Status(v)
}

// MarshalProtoJSON marshals the AsConfiguration_PubSub_Providers message to JSON.
func (x *AsConfiguration_PubSub_Providers) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Mqtt != 0 {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("mqtt")
		x.Mqtt.MarshalProtoJSON(s)
	}
	if x.Nats != 0 {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("nats")
		x.Nats.MarshalProtoJSON(s)
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the AsConfiguration_PubSub_Providers message from JSON.
func (x *AsConfiguration_PubSub_Providers) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "mqtt":
			x.Mqtt.UnmarshalProtoJSON(s)
		case "nats":
			x.Nats.UnmarshalProtoJSON(s)
		}
	})
}

// MarshalProtoJSON marshals the AsConfiguration_PubSub message to JSON.
func (x *AsConfiguration_PubSub) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Providers != nil {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("providers")
		x.Providers.MarshalProtoJSON(s.WithField("providers"))
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the AsConfiguration_PubSub message from JSON.
func (x *AsConfiguration_PubSub) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "providers":
			if !s.ReadNil() {
				x.Providers = &AsConfiguration_PubSub_Providers{}
				x.Providers.UnmarshalProtoJSON(s.WithField("providers"))
			}
		}
	})
}

// MarshalProtoJSON marshals the AsConfiguration message to JSON.
func (x *AsConfiguration) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Pubsub != nil {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("pubsub")
		x.Pubsub.MarshalProtoJSON(s.WithField("pubsub"))
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the AsConfiguration message from JSON.
func (x *AsConfiguration) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "pubsub":
			if !s.ReadNil() {
				x.Pubsub = &AsConfiguration_PubSub{}
				x.Pubsub.UnmarshalProtoJSON(s.WithField("pubsub"))
			}
		}
	})
}

// MarshalProtoJSON marshals the GetAsConfigurationResponse message to JSON.
func (x *GetAsConfigurationResponse) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Configuration != nil {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("configuration")
		x.Configuration.MarshalProtoJSON(s.WithField("configuration"))
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the GetAsConfigurationResponse message from JSON.
func (x *GetAsConfigurationResponse) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "configuration":
			if !s.ReadNil() {
				x.Configuration = &AsConfiguration{}
				x.Configuration.UnmarshalProtoJSON(s.WithField("configuration"))
			}
		}
	})
}

// MarshalProtoJSON marshals the NsAsHandleUplinkRequest message to JSON.
func (x *NsAsHandleUplinkRequest) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if len(x.ApplicationUps) > 0 {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("application_ups")
		s.WriteArrayStart()
		var wroteElement bool
		for _, element := range x.ApplicationUps {
			s.WriteMoreIf(&wroteElement)
			element.MarshalProtoJSON(s.WithField("application_ups"))
		}
		s.WriteArrayEnd()
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the NsAsHandleUplinkRequest message from JSON.
func (x *NsAsHandleUplinkRequest) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "application_ups", "applicationUps":
			s.ReadArray(func() {
				if !s.ReadNil() {
					v := &ApplicationUp{}
					v.UnmarshalProtoJSON(s.WithField("application_ups"))
					x.ApplicationUps = append(x.ApplicationUps, v)
				} else {
					x.ApplicationUps = append(x.ApplicationUps, nil)
				}
			})
		}
	})
}

// MarshalProtoJSON marshals the EncodeDownlinkRequest message to JSON.
func (x *EncodeDownlinkRequest) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.EndDeviceIds != nil {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("end_device_ids")
		// NOTE: EndDeviceIdentifiers does not seem to implement MarshalProtoJSON.
		gogo.MarshalMessage(s, x.EndDeviceIds)
	}
	if x.VersionIds != nil {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("version_ids")
		// NOTE: EndDeviceVersionIdentifiers does not seem to implement MarshalProtoJSON.
		gogo.MarshalMessage(s, x.VersionIds)
	}
	if x.Downlink != nil {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("downlink")
		x.Downlink.MarshalProtoJSON(s.WithField("downlink"))
	}
	if x.Formatter != 0 {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("formatter")
		x.Formatter.MarshalProtoJSON(s)
	}
	if x.Parameter != "" {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("parameter")
		s.WriteString(x.Parameter)
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the EncodeDownlinkRequest message from JSON.
func (x *EncodeDownlinkRequest) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "end_device_ids", "endDeviceIds":
			// NOTE: EndDeviceIdentifiers does not seem to implement UnmarshalProtoJSON.
			var v EndDeviceIdentifiers
			gogo.UnmarshalMessage(s, &v)
			x.EndDeviceIds = &v
		case "version_ids", "versionIds":
			// NOTE: EndDeviceVersionIdentifiers does not seem to implement UnmarshalProtoJSON.
			var v EndDeviceVersionIdentifiers
			gogo.UnmarshalMessage(s, &v)
			x.VersionIds = &v
		case "downlink":
			if !s.ReadNil() {
				x.Downlink = &ApplicationDownlink{}
				x.Downlink.UnmarshalProtoJSON(s.WithField("downlink"))
			}
		case "formatter":
			x.Formatter.UnmarshalProtoJSON(s)
		case "parameter":
			x.Parameter = s.ReadString()
		}
	})
}

// MarshalProtoJSON marshals the EncodeDownlinkResponse message to JSON.
func (x *EncodeDownlinkResponse) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Downlink != nil {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("downlink")
		x.Downlink.MarshalProtoJSON(s.WithField("downlink"))
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the EncodeDownlinkResponse message from JSON.
func (x *EncodeDownlinkResponse) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "downlink":
			if !s.ReadNil() {
				x.Downlink = &ApplicationDownlink{}
				x.Downlink.UnmarshalProtoJSON(s.WithField("downlink"))
			}
		}
	})
}

// MarshalProtoJSON marshals the DecodeUplinkRequest message to JSON.
func (x *DecodeUplinkRequest) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.EndDeviceIds != nil {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("end_device_ids")
		// NOTE: EndDeviceIdentifiers does not seem to implement MarshalProtoJSON.
		gogo.MarshalMessage(s, x.EndDeviceIds)
	}
	if x.VersionIds != nil {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("version_ids")
		// NOTE: EndDeviceVersionIdentifiers does not seem to implement MarshalProtoJSON.
		gogo.MarshalMessage(s, x.VersionIds)
	}
	if x.Uplink != nil {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("uplink")
		x.Uplink.MarshalProtoJSON(s.WithField("uplink"))
	}
	if x.Formatter != 0 {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("formatter")
		x.Formatter.MarshalProtoJSON(s)
	}
	if x.Parameter != "" {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("parameter")
		s.WriteString(x.Parameter)
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the DecodeUplinkRequest message from JSON.
func (x *DecodeUplinkRequest) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "end_device_ids", "endDeviceIds":
			// NOTE: EndDeviceIdentifiers does not seem to implement UnmarshalProtoJSON.
			var v EndDeviceIdentifiers
			gogo.UnmarshalMessage(s, &v)
			x.EndDeviceIds = &v
		case "version_ids", "versionIds":
			// NOTE: EndDeviceVersionIdentifiers does not seem to implement UnmarshalProtoJSON.
			var v EndDeviceVersionIdentifiers
			gogo.UnmarshalMessage(s, &v)
			x.VersionIds = &v
		case "uplink":
			if !s.ReadNil() {
				x.Uplink = &ApplicationUplink{}
				x.Uplink.UnmarshalProtoJSON(s.WithField("uplink"))
			}
		case "formatter":
			x.Formatter.UnmarshalProtoJSON(s)
		case "parameter":
			x.Parameter = s.ReadString()
		}
	})
}

// MarshalProtoJSON marshals the DecodeUplinkResponse message to JSON.
func (x *DecodeUplinkResponse) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Uplink != nil {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("uplink")
		x.Uplink.MarshalProtoJSON(s.WithField("uplink"))
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the DecodeUplinkResponse message from JSON.
func (x *DecodeUplinkResponse) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "uplink":
			if !s.ReadNil() {
				x.Uplink = &ApplicationUplink{}
				x.Uplink.UnmarshalProtoJSON(s.WithField("uplink"))
			}
		}
	})
}

// MarshalProtoJSON marshals the DecodeDownlinkRequest message to JSON.
func (x *DecodeDownlinkRequest) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.EndDeviceIds != nil {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("end_device_ids")
		// NOTE: EndDeviceIdentifiers does not seem to implement MarshalProtoJSON.
		gogo.MarshalMessage(s, x.EndDeviceIds)
	}
	if x.VersionIds != nil {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("version_ids")
		// NOTE: EndDeviceVersionIdentifiers does not seem to implement MarshalProtoJSON.
		gogo.MarshalMessage(s, x.VersionIds)
	}
	if x.Downlink != nil {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("downlink")
		x.Downlink.MarshalProtoJSON(s.WithField("downlink"))
	}
	if x.Formatter != 0 {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("formatter")
		x.Formatter.MarshalProtoJSON(s)
	}
	if x.Parameter != "" {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("parameter")
		s.WriteString(x.Parameter)
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the DecodeDownlinkRequest message from JSON.
func (x *DecodeDownlinkRequest) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "end_device_ids", "endDeviceIds":
			// NOTE: EndDeviceIdentifiers does not seem to implement UnmarshalProtoJSON.
			var v EndDeviceIdentifiers
			gogo.UnmarshalMessage(s, &v)
			x.EndDeviceIds = &v
		case "version_ids", "versionIds":
			// NOTE: EndDeviceVersionIdentifiers does not seem to implement UnmarshalProtoJSON.
			var v EndDeviceVersionIdentifiers
			gogo.UnmarshalMessage(s, &v)
			x.VersionIds = &v
		case "downlink":
			if !s.ReadNil() {
				x.Downlink = &ApplicationDownlink{}
				x.Downlink.UnmarshalProtoJSON(s.WithField("downlink"))
			}
		case "formatter":
			x.Formatter.UnmarshalProtoJSON(s)
		case "parameter":
			x.Parameter = s.ReadString()
		}
	})
}

// MarshalProtoJSON marshals the DecodeDownlinkResponse message to JSON.
func (x *DecodeDownlinkResponse) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Downlink != nil {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("downlink")
		x.Downlink.MarshalProtoJSON(s.WithField("downlink"))
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the DecodeDownlinkResponse message from JSON.
func (x *DecodeDownlinkResponse) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "downlink":
			if !s.ReadNil() {
				x.Downlink = &ApplicationDownlink{}
				x.Downlink.UnmarshalProtoJSON(s.WithField("downlink"))
			}
		}
	})
}
