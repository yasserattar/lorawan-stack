// Code generated by protoc-gen-go-json. DO NOT EDIT.
// versions:
// - protoc-gen-go-json vmaster
// - protoc             v3.9.1
// source: lorawan-stack/api/join.proto

package ttnpb

import (
	jsonplugin "github.com/TheThingsIndustries/protoc-gen-go-json/jsonplugin"
)

// MarshalProtoJSON marshals the JoinRequest message to JSON.
func (x *JoinRequest) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if len(x.RawPayload) > 0 {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("raw_payload")
		s.WriteBytes(x.RawPayload)
	}
	if x.Payload != nil {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("payload")
		x.Payload.MarshalProtoJSON(s.WithField("payload"))
	}
	if len(x.DevAddr) > 0 {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("dev_addr")
		x.DevAddr.MarshalProtoJSON(s.WithField("dev_addr"))
	}
	if x.SelectedMacVersion != 0 {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("selected_mac_version")
		x.SelectedMacVersion.MarshalProtoJSON(s)
	}
	if len(x.NetId) > 0 {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("net_id")
		x.NetId.MarshalProtoJSON(s.WithField("net_id"))
	}
	if true { // (gogoproto.nullable) = false
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("downlink_settings")
		x.DownlinkSettings.MarshalProtoJSON(s.WithField("downlink_settings"))
	}
	if x.RxDelay != 0 {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("rx_delay")
		x.RxDelay.MarshalProtoJSON(s)
	}
	if x.CfList != nil {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("cf_list")
		x.CfList.MarshalProtoJSON(s.WithField("cf_list"))
	}
	if len(x.CorrelationIds) > 0 {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("correlation_ids")
		s.WriteStringArray(x.CorrelationIds)
	}
	if x.ConsumedAirtime != nil {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("consumed_airtime")
		s.WriteDuration(*x.ConsumedAirtime)
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the JoinRequest message from JSON.
func (x *JoinRequest) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "raw_payload", "rawPayload":
			x.RawPayload = s.ReadBytes()
		case "payload":
			if !s.ReadNil() {
				x.Payload = &Message{}
				x.Payload.UnmarshalProtoJSON(s.WithField("payload"))
			}
		case "dev_addr", "devAddr":
			x.DevAddr.UnmarshalProtoJSON(s.WithField("dev_addr"))
		case "selected_mac_version", "selectedMacVersion":
			x.SelectedMacVersion.UnmarshalProtoJSON(s)
		case "net_id", "netId":
			x.NetId.UnmarshalProtoJSON(s.WithField("net_id"))
		case "downlink_settings", "downlinkSettings":
			if !s.ReadNil() {
				x.DownlinkSettings.UnmarshalProtoJSON(s.WithField("downlink_settings"))
			}
		case "rx_delay", "rxDelay":
			x.RxDelay.UnmarshalProtoJSON(s)
		case "cf_list", "cfList":
			if !s.ReadNil() {
				x.CfList = &CFList{}
				x.CfList.UnmarshalProtoJSON(s.WithField("cf_list"))
			}
		case "correlation_ids", "correlationIds":
			x.CorrelationIds = s.ReadStringArray()
		case "consumed_airtime", "consumedAirtime":
			v := s.ReadDuration()
			if s.Err() != nil {
				return
			}
			x.ConsumedAirtime = v
		}
	})
}
